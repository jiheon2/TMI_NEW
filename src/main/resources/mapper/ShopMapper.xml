<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- JAVA와 연결할 Mapper 파일 설정 -->
<mapper namespace="kopo.poly.persistance.mapper.IShopMapper">

    <select id="goodsBuyInfo" parameterType="ReserveDTO" resultType="ReserveDTO">
        SELECT BID, TID, DATE, NAME, SEQ, PRICE, STATE, contents
        FROM RESERVATION
        WHERE 1=1
        <if test="date neq null and date neq ''">
            AND DATE(DATE) = #{date}
        </if>
        AND TID = #{tid}
        AND state = #{state}
        ORDER BY SEQ DESC
    </select>
    <select id="getReviewCount"  parameterType="ShopDTO" resultType="java.lang.String">
        SELECT COUNT(*)
        FROM REVIEW
        WHERE Trader_ID = #{tid}
    </select>
    <select id="getReserveCount"  parameterType="ShopDTO" resultType="java.lang.String">
        SELECT COUNT(*)
        FROM RESERVATION
        WHERE TID = #{tid}
        AND DATE(DATE) = CURDATE()
    </select>
    <select id="getBuyCount"  parameterType="ShopDTO" resultType="java.lang.String">
        SELECT COUNT(*)
        FROM RESERVATION
        WHERE TID = #{tid}
          AND STATE = "1"
          AND DATE(DATE) = CURDATE()
    </select>
    <select id="getDateCount"  parameterType="ShopDTO" resultType="ShopDTO">
        SELECT DATE(DATE) AS date, COUNT(*) AS dateCount
        FROM RESERVATION
        WHERE STATE = "1"
        AND TID = #{tid}
        GROUP BY DATE
    </select>
    <select id="getReserveStop"  parameterType="ShopDTO" resultType="java.lang.String">
        SELECT COUNT(*)
        FROM RESERVATION
        WHERE TID = #{tid}
          AND STATE = "0"
          AND DATE(DATE) = CURDATE()
    </select>
    <delete id="deleteBuy" parameterType="ReserveDTO">
        DELETE FROM RESERVATION
        WHERE SEQ = #{seq}
          AND TID = #{tid}
    </delete>
    <update id="acceptBuy" parameterType="ReserveDTO">
        UPDATE RESERVATION
        SET state = 1
        WHERE TID = #{tid}
          AND SEQ = #{seq}
    </update>

    <select id="getGoodsList" parameterType="ProductDTO" resultType="ProductDTO">
        SELECT NAME, PRICE, TYPE, PID, SEQ
        FROM PRODUCT
        WHERE PID = #{pid}
        ORDER BY SEQ DESC
    </select>

    <select id="getGoodsInfo"  parameterType="ProductDTO" resultType="ProductDTO">
        SELECT NAME, PRICE, TYPE, DES, IMAGE, SEQ, PID
        FROM PRODUCT
        WHERE PID = #{pid}
        AND SEQ = #{seq}
    </select>
    <update id="changeGoods" parameterType="ProductDTO">
        UPDATE PRODUCT
        SET NAME = #{name},
            PRICE = #{price},
            DES = #{des},
            TYPE = #{type},
            IMAGE = #{image}
        WHERE PID = #{pid}
          AND SEQ = #{seq}
    </update>
    <insert id="insertGoods" parameterType="ProductDTO">
        INSERT INTO PRODUCT (PID, NAME, TYPE, PRICE, DES, SEQ, IMAGE)
        VALUES (#{pid}, #{name}, #{type}, #{price}, #{des}, (SELECT IFNULL(MAX(A.SEQ),0)+1 FROM PRODUCT A), #{image})
    </insert>

    <select id="getShopInfo" parameterType="ShopDTO" resultType="ShopDTO">
        SELECT CNAME, LOC, DES, NAME, IMAGE
        FROM SHOP
        WHERE TID = #{tid}
    </select>
    <update id="changeShop" parameterType="ShopDTO">
        UPDATE SHOP
        SET CNAME = #{cname},
            LOC = #{loc},
            NAME = #{name},
            TYPE = #{type},
            DES = #{des},
            IMAGE = #{image}
        WHERE TID = #{tid}
    </update>
    <insert id="insertShop" parameterType="ShopDTO">
        INSERT INTO SHOP (TID, CNAME, TYPE, LOC, DES, NAME, IMAGE)
        VALUES (#{tid}, #{cname}, #{type}, #{loc}, #{des}, #{name}, #{image})
    </insert>
    <delete id="goodsMsgDelete" parameterType="ProductDTO">
        DELETE FROM PRODUCT
        WHERE SEQ = #{seq}
        AND PID = #{pid}
    </delete>

</mapper>